name: Build Everything
permissions: read-all

on:
  # For manual tests.
  workflow_dispatch:
  push:
#   tags:
#     - "*" # new tag version, like `0.8.4` or else
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_windows_linux:
    name: Build ${{ matrix.target }} ${{ matrix.build_mode }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:

          - os: windows-latest
            target: Windows
            build_mode: release
            build_target: windows
            build_path: build\windows\runner\Release
            asset_extension: .zip
            asset_content_type: application/zip

          - os: windows-latest
            target: Windows
            build_mode: debug
            build_target: windows
            build_path: build\windows\runner\Debug
            asset_extension: .zip
            asset_content_type: application/zip

          - os: ubuntu-latest
            target: Linux
            build_mode: release
            build_target: linux
            build_path: build/linux/x64/release/bundle
            asset_extension: .tar.gz
            asset_content_type: application/gzip

          - os: ubuntu-latest
            target: Linux
            build_mode: debug
            build_target: linux
            build_path: build/linux/x64/debug/bundle
            asset_extension: .tar.gz
            asset_content_type: application/gzip

      # Disable fail-fast as we want results from all even if one fails.
      fail-fast: false
    steps:
      # Set up Flutter.
      - name: Clone Flutter repository with master channel
        uses: subosito/flutter-action@9d48f4efd5460d7013af812069d08b23f37aed20
        with:
          channel: master
          
      - name: Install Linux dependencies
        if: matrix.target == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev
          
      - name: Enable Windows desktop support
        if: matrix.target == 'Windows'
        run: flutter config --enable-windows-desktop
        
      - name: Enable Linux desktop support
        if: matrix.target == 'Linux'
        run: flutter config --enable-linux-desktop
          
      - run: flutter doctor -v
      
      # Checkout gallery code, recreate missing files, and get packages.
      - name: Checkout gallery code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - run: flutter create .
      - run: flutter pub get

      # Build the application.
      - run: flutter build ${{ matrix.build_target }} --${{ matrix.build_mode }}

      # Package the build.
      - name: Copy VC redistributables to release directory for Windows
        if: matrix.target == 'Windows'
        run: |
          Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\msvcp140.dll') .
          Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\vcruntime140.dll') .
          Copy-Item (vswhere -latest -find 'VC\Redist\MSVC\*\x64\*\vcruntime140_1.dll') .
        working-directory: ${{ matrix.build_path }}
        
      - name: Make a dist directory
        run: mkdir ${{ github.event.repository.name }}_dist 

      - name: Compress build for Linux
        if: matrix.target == 'Linux'
        run: |
          ls -alrt
          tar czf $GITHUB_WORKSPACE/${{ github.event.repository.name }}_dist/${{ github.event.repository.name }}_${{ matrix.target }}_${{ matrix.build_mode }}.tar.gz *
        working-directory: ${{ matrix.build_path }}

      - name: Compress build for Windows
        if: matrix.target == 'Windows'
        run: |
          dir
          compress-archive -Path * -DestinationPath ${env:GITHUB_WORKSPACE}\${{ github.event.repository.name }}_dist\${{ github.event.repository.name }}_${{ matrix.target }}_${{ matrix.build_mode }}.zip
        working-directory: ${{ matrix.build_path }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows_linux_${{ github.event.repository.name }}_dist
          path: |
            ${{ github.event.repository.name }}_dist/
